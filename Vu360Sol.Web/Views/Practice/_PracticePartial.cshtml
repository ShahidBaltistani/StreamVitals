
@model Vu360Sol.ViewModel.SharedViewModels.PracticeViewModelPaginationModel
<div class="row">
    <div class="col-lg-6">
        <a href="/Practice/Create" style="float:left; padding:8px !important;" class="button button-border button-white button-light button-large button-rounded text-right "><span>Create</span></a>
    </div>
    <div class="col-lg-4 offset-2">
        <div class="input-group mx-auto">
            <input class="form-control" id="practiceSearchInput" type="text" value="@Model.SearchTerm" placeholder="Search by Name">
            <div class="input-group-append">
                <button class="btn btn-info" type="button" id="searchbutton">
                    <i class="icon-search"></i>
                </button>
            </div>
        </div>
    </div>
</div>
<div class="table-responsive">
    <table class="table" id="content">
        <thead>
            <tr>
                <th>Name</th>
                <th style="text-align:center;">Action</th>
            </tr>
        </thead>
        <tbody id="myTable">
            @if (Model.practice.Count() == 0)
            {
                <tr>
                    <td colspan="4" style="text-align:center;font-size:20px;font-weight:bold;">
                        No Practice...
                        <a href="/Practice/Create" style="text-decoration:none">
                            <small>Create</small>
                        </a>
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.practice)
                {
                    <tr id="contentrow">
                        <td>@item.Name</td>
                        <td style="text-align:center;">
                            <ul class="navbar-nav mx-auto absolute-right ">
                                <li class="nav-item dropdown">
                                    <a class="" href="#" id="dropdown05" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="icon icon-list"></i>
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="dropdown05" style="min-width: 14rem !important;left:-41px !important">

                                        <a href="@Url.Action("Edit","Practice",new { id = item.Id})" style="text-decoration: none; padding: 6px;color:green">
                                            <i class="icon icon-edit"></i>
                                            Edit
                                        </a>
                                        <br />
                                        <a href="#" onclick="deleteSalePerson(@item.Id)" style="text-decoration: none; padding: 6px;color:red">
                                            <i class="icon icon-trash"></i>
                                            Delete
                                        </a>
                                    </div>
                                </li>
                            </ul>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <ul class="pagination pagination-rounded mt-5">
        @if (@Model.page != null && @Model.page.TotalPages > 1)
        {

            if (@Model.page.CurrentPage > 1)
            {
                <li class="page-item" title="First">
                    <a class="practiceButtons page-link" data-pageno="1"><i class="icon-line-chevrons-left"></i></a>
                </li>

                <li class="page-item" title="Previous">
                    <a class="practiceButtons page-link" data-pageno="@(@Model.page.CurrentPage - 1)"><i class="icon-line-chevron-left"></i></a>
                </li>
            }
            for (var page = @Model.page.StartPage; page <= @Model.page.EndPage; page++)
            {
                string activeClass = @Model.page.CurrentPage == page ? "active" : string.Empty;

                <li class="page-item @activeClass">
                    <a class="practiceButtons page-link" data-pageno="@page">@page</a>

                </li>
            }
            if (@Model.page.CurrentPage < @Model.page.TotalPages)
            {
                <li class="page-item" title="Next">
                    <a class="practiceButtons page-link" data-pageno="@(@Model.page.CurrentPage + 1)"><i class="icon-line-chevron-right"></i></a>
                </li>
                <li class="page-item" title="Last">
                    <a class="practiceButtons page-link" data-pageno="@Model.page.TotalPages"><i class="icon-line-chevrons-right"></i></a>
                </li>
            }
        }
    </ul>
</div>
<script>
    $(".practiceButtons").click(function () {
        debugger;
        var data= {
				pageNo: $(this).attr("data-pageNo"),
                search: '@Model.SearchTerm'
        }
        SendRequest(data);
	});
    $.fn.pressEnter = function (fn) {
        return this.each(function () {
            $(this).bind('enterPress', fn);
            $(this).keyup(function (e) {
                if (e.keyCode == 13) {
                    $(this).trigger("enterPress");
                }
            })
        });
    };
    // On Enter
    $('#practiceSearchInput').pressEnter(function () {
        var data = {
            search: $('#practiceSearchInput').val()
        };
        SendPracticeRequest(data);
    });
    // For Loading Data.....
    $('#practiceSearchInput').on('input', function (e) {
        var data = {
            search: $('#practiceSearchInput').val()
        };
        if (data.search == "") {
            SendPracticeRequest(data);
        }
    });
    // On Click
    $('#searchbutton').on('click', function (e) {
        var data = {
            search: $('#practiceSearchInput').val()
        };
        SendPracticeRequest(data);
    });


    function SendPracticeRequest(data) {
        	$.ajax({
			url: '@Url.Action("GetAll", "Practice")',
			data:data
		})
            .done(function (response) {
                debugger;
                $("#partialPractice").html(response);
                var search = $("#practiceSearchInput");
                search.focus();
                var strLength = search.val().length * 2;
                search[0].setSelectionRange(strLength, strLength);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                //alert("FAIL");
            });
    };
</script>
